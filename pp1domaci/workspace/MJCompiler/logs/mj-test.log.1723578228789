INFO  21:43:10,397 - Compiling source file: C:\Users\anjci\OneDrive\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:43:10,401 - #1 program
INFO  21:43:10,401 - #14 p
INFO  21:43:10,401 - #14 Table
INFO  21:43:10,401 - #14 val
INFO  21:43:10,401 - #34 ;
INFO  21:43:10,401 - #5 int
INFO  21:43:10,401 - #14 rows
INFO  21:43:10,401 - #33 ,
INFO  21:43:10,401 - #14 columns
INFO  21:43:10,401 - #34 ;
INFO  21:43:10,401 - #37 {
INFO  21:43:10,401 - #4 void
INFO  21:43:10,401 - #14 f
INFO  21:43:10,401 - #35 (
INFO  21:43:10,401 - #6 char
INFO  21:43:10,401 - #14 ch
INFO  21:43:10,401 - #33 ,
INFO  21:43:10,401 - #5 int
INFO  21:43:10,401 - #14 a
INFO  21:43:10,401 - #33 ,
INFO  21:43:10,401 - #5 int
INFO  21:43:10,402 - #14 arg
INFO  21:43:10,402 - #36 )
INFO  21:43:10,402 - #5 int
INFO  21:43:10,402 - #14 x
INFO  21:43:10,402 - #34 ;
INFO  21:43:10,402 - #37 {
INFO  21:43:10,402 - #14 x
INFO  21:43:10,402 - #32 =
INFO  21:43:10,402 - #14 arg
INFO  21:43:10,402 - #34 ;
INFO  21:43:10,402 - #38 }
INFO  21:43:10,402 - #4 void
INFO  21:43:10,402 - #14 main
INFO  21:43:10,402 - #35 (
INFO  21:43:10,402 - #36 )
INFO  21:43:10,402 - #5 int
INFO  21:43:10,402 - #14 x
INFO  21:43:10,402 - #33 ,
INFO  21:43:10,402 - #14 i
INFO  21:43:10,402 - #34 ;
INFO  21:43:10,402 - #6 char
INFO  21:43:10,402 - #14 c
INFO  21:43:10,402 - #33 ,
INFO  21:43:10,403 - #5 int
INFO  21:43:10,403 - #14 arr
INFO  21:43:10,403 - #34 ;
INFO  21:43:10,403 - #37 {
INFO  21:43:10,403 - #14 val
INFO  21:43:10,403 - #32 =
INFO  21:43:10,403 - #12 new
INFO  21:43:10,403 - #14 Table
INFO  21:43:10,403 - #35 (
INFO  21:43:10,403 - #36 )
INFO  21:43:10,403 - #34 ;
INFO  21:43:10,403 - #14 val
INFO  21:43:10,403 - #14 setfactor
INFO  21:43:10,403 - #35 (
INFO  21:43:10,404 - #15 2
INFO  21:43:10,404 - #36 )
INFO  21:43:10,404 - #34 ;
INFO  21:43:10,404 - #14 arr
INFO  21:43:10,404 - #32 =
INFO  21:43:10,404 - #12 new
INFO  21:43:10,404 - #5 int
INFO  21:43:10,404 - #15 3
INFO  21:43:10,404 - #34 ;
INFO  21:43:10,404 - #10 for
INFO  21:43:10,404 - #35 (
INFO  21:43:10,404 - #14 i
INFO  21:43:10,404 - #32 =
INFO  21:43:10,404 - #15 0
INFO  21:43:10,404 - #34 ;
INFO  21:43:10,404 - #14 i
INFO  21:43:10,404 - #25 <
INFO  21:43:10,404 - #15 3
INFO  21:43:10,404 - #34 ;
INFO  21:43:10,404 - #14 i
INFO  21:43:10,404 - #47 ++
INFO  21:43:10,404 - #36 )
INFO  21:43:10,404 - #37 {
INFO  21:43:10,405 - #14 arr
INFO  21:43:10,405 - #14 i
INFO  21:43:10,405 - #32 =
INFO  21:43:10,405 - #14 i
INFO  21:43:10,405 - #34 ;
INFO  21:43:10,405 - #38 }
INFO  21:43:10,405 - #10 for
INFO  21:43:10,405 - #35 (
INFO  21:43:10,405 - #14 i
INFO  21:43:10,405 - #32 =
INFO  21:43:10,405 - #15 0
INFO  21:43:10,405 - #34 ;
INFO  21:43:10,405 - #14 i
INFO  21:43:10,405 - #25 <
INFO  21:43:10,405 - #15 3
INFO  21:43:10,405 - #34 ;
INFO  21:43:10,405 - #14 i
INFO  21:43:10,405 - #47 ++
INFO  21:43:10,405 - #36 )
INFO  21:43:10,405 - #2 print
INFO  21:43:10,405 - #35 (
INFO  21:43:10,405 - #14 arr
INFO  21:43:10,405 - #14 i
INFO  21:43:10,406 - #36 )
INFO  21:43:10,406 - #34 ;
INFO  21:43:10,406 - #14 val
INFO  21:43:10,406 - #14 pos
INFO  21:43:10,406 - #32 =
INFO  21:43:10,406 - #12 new
INFO  21:43:10,406 - #5 int
INFO  21:43:10,406 - #14 sizes
INFO  21:43:10,406 - #46 ::
INFO  21:43:10,406 - #14 tableSize
INFO  21:43:10,406 - #34 ;
INFO  21:43:10,406 - #14 val
INFO  21:43:10,406 - #14 neg
INFO  21:43:10,406 - #32 =
INFO  21:43:10,406 - #12 new
INFO  21:43:10,406 - #5 int
INFO  21:43:10,406 - #14 sizes
INFO  21:43:10,406 - #46 ::
INFO  21:43:10,407 - #14 tableSize
INFO  21:43:10,407 - #34 ;
INFO  21:43:10,407 - #14 read
INFO  21:43:10,407 - #35 (
INFO  21:43:10,407 - #14 x
INFO  21:43:10,407 - #36 )
INFO  21:43:10,407 - #34 ;
INFO  21:43:10,407 - #10 for
INFO  21:43:10,407 - #35 (
INFO  21:43:10,407 - #34 ;
INFO  21:43:10,407 - #14 i
INFO  21:43:10,407 - #25 <
INFO  21:43:10,410 - #14 sizes
INFO  21:43:10,410 - #46 ::
INFO  21:43:10,410 - #14 tableSize
INFO  21:43:10,410 - #34 ;
INFO  21:43:10,410 - #14 i
INFO  21:43:10,410 - #47 ++
INFO  21:43:10,410 - #36 )
INFO  21:43:10,410 - #37 {
INFO  21:43:10,410 - #14 val
INFO  21:43:10,410 - #14 putp
INFO  21:43:10,411 - #35 (
INFO  21:43:10,411 - #15 0
INFO  21:43:10,411 - #33 ,
INFO  21:43:10,411 - #14 i
INFO  21:43:10,411 - #36 )
INFO  21:43:10,411 - #34 ;
INFO  21:43:10,411 - #14 val
INFO  21:43:10,411 - #14 putn
INFO  21:43:10,411 - #35 (
INFO  21:43:10,411 - #15 0
INFO  21:43:10,411 - #33 ,
INFO  21:43:10,411 - #14 i
INFO  21:43:10,411 - #36 )
INFO  21:43:10,411 - #34 ;
INFO  21:43:10,411 - #38 }
INFO  21:43:10,411 - #14 f
INFO  21:43:10,411 - #35 (
INFO  21:43:10,411 - #14 c
INFO  21:43:10,411 - #33 ,
INFO  21:43:10,411 - #14 x
INFO  21:43:10,411 - #33 ,
INFO  21:43:10,411 - #14 i
INFO  21:43:10,411 - #36 )
INFO  21:43:10,411 - #34 ;
INFO  21:43:10,411 - #14 read
INFO  21:43:10,411 - #35 (
INFO  21:43:10,411 - #14 rows
INFO  21:43:10,411 - #36 )
INFO  21:43:10,412 - #34 ;
INFO  21:43:10,412 - #14 x
INFO  21:43:10,412 - #32 =
INFO  21:43:10,412 - #14 rows
INFO  21:43:10,412 - #34 ;
INFO  21:43:10,412 - #10 for
INFO  21:43:10,412 - #35 (
INFO  21:43:10,412 - #34 ;
INFO  21:43:10,412 - #34 ;
INFO  21:43:10,412 - #36 )
INFO  21:43:10,412 - #37 {
INFO  21:43:10,412 - #8 if
INFO  21:43:10,412 - #35 (
INFO  21:43:10,412 - #14 x
INFO  21:43:10,412 - #26 <=
INFO  21:43:10,412 - #15 0
INFO  21:43:10,412 - #36 )
INFO  21:43:10,412 - #14 break
INFO  21:43:10,412 - #34 ;
INFO  21:43:10,412 - #8 if
INFO  21:43:10,412 - #35 (
INFO  21:43:10,412 - #15 0
INFO  21:43:10,412 - #26 <=
INFO  21:43:10,412 - #14 x
INFO  21:43:10,412 - #29 &&
INFO  21:43:10,412 - #14 x
INFO  21:43:10,412 - #25 <
INFO  21:43:10,412 - #14 sizes
INFO  21:43:10,412 - #46 ::
INFO  21:43:10,413 - #14 tableSize
INFO  21:43:10,413 - #36 )
INFO  21:43:10,413 - #37 {
INFO  21:43:10,413 - #14 val
INFO  21:43:10,413 - #14 putp
INFO  21:43:10,413 - #35 (
INFO  21:43:10,413 - #14 val
INFO  21:43:10,413 - #14 getp
INFO  21:43:10,413 - #35 (
INFO  21:43:10,413 - #14 x
INFO  21:43:10,413 - #36 )
INFO  21:43:10,413 - #18 +
INFO  21:43:10,413 - #15 1
INFO  21:43:10,413 - #36 )
INFO  21:43:10,413 - #34 ;
INFO  21:43:10,413 - #38 }
INFO  21:43:10,413 - #9 else
INFO  21:43:10,413 - #8 if
INFO  21:43:10,413 - #35 (
INFO  21:43:10,413 - #14 sizes
INFO  21:43:10,413 - #46 ::
INFO  21:43:10,413 - #14 tableSize
INFO  21:43:10,413 - #25 <
INFO  21:43:10,413 - #14 x
INFO  21:43:10,413 - #29 &&
INFO  21:43:10,413 - #14 x
INFO  21:43:10,413 - #25 <
INFO  21:43:10,413 - #15 0
INFO  21:43:10,413 - #36 )
INFO  21:43:10,414 - #37 {
INFO  21:43:10,414 - #14 val
INFO  21:43:10,414 - #14 putn
INFO  21:43:10,414 - #35 (
INFO  21:43:10,414 - #14 val
INFO  21:43:10,414 - #14 getn
INFO  21:43:10,414 - #35 (
INFO  21:43:10,414 - #14 x
INFO  21:43:10,414 - #36 )
INFO  21:43:10,414 - #18 +
INFO  21:43:10,414 - #15 1
INFO  21:43:10,414 - #36 )
INFO  21:43:10,414 - #34 ;
INFO  21:43:10,414 - #38 }
INFO  21:43:10,414 - #14 read
INFO  21:43:10,414 - #35 (
INFO  21:43:10,414 - #14 x
INFO  21:43:10,414 - #36 )
INFO  21:43:10,414 - #34 ;
INFO  21:43:10,414 - #38 }
INFO  21:43:10,414 - #38 }
INFO  21:43:10,415 - #38 }
