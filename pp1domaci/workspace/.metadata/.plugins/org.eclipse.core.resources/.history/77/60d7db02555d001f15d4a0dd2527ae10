INFO  21:54:59,741 - Compiling source file: C:\Users\anjci\OneDrive\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:54:59,744 - #1 program
INFO  21:54:59,744 - #14 p
INFO  21:54:59,744 - #14 Table
INFO  21:54:59,744 - #14 val
INFO  21:54:59,744 - #34 ;
INFO  21:54:59,744 - #5 int
INFO  21:54:59,744 - #14 rows
INFO  21:54:59,744 - #33 ,
INFO  21:54:59,744 - #14 columns
INFO  21:54:59,745 - #34 ;
INFO  21:54:59,745 - #37 {
INFO  21:54:59,745 - #4 void
INFO  21:54:59,745 - #14 f
INFO  21:54:59,745 - #35 (
INFO  21:54:59,745 - #6 char
INFO  21:54:59,745 - #14 ch
INFO  21:54:59,745 - #33 ,
INFO  21:54:59,745 - #5 int
INFO  21:54:59,745 - #14 a
INFO  21:54:59,745 - #33 ,
INFO  21:54:59,745 - #5 int
INFO  21:54:59,750 - #14 arg
INFO  21:54:59,750 - #36 )
INFO  21:54:59,750 - #5 int
INFO  21:54:59,750 - #14 x
INFO  21:54:59,750 - #34 ;
INFO  21:54:59,750 - #37 {
INFO  21:54:59,750 - #14 x
INFO  21:54:59,750 - #32 =
INFO  21:54:59,750 - #14 arg
INFO  21:54:59,750 - #34 ;
INFO  21:54:59,750 - #38 }
INFO  21:54:59,750 - #4 void
INFO  21:54:59,750 - #14 main
INFO  21:54:59,750 - #35 (
INFO  21:54:59,750 - #36 )
INFO  21:54:59,750 - #5 int
INFO  21:54:59,750 - #14 x
INFO  21:54:59,750 - #33 ,
INFO  21:54:59,750 - #14 i
INFO  21:54:59,750 - #34 ;
INFO  21:54:59,750 - #6 char
INFO  21:54:59,750 - #14 c
INFO  21:54:59,750 - #33 ,
INFO  21:54:59,750 - #5 int
INFO  21:54:59,750 - #52 [
INFO  21:54:59,750 - #53 ]
INFO  21:54:59,750 - #14 arr
INFO  21:54:59,750 - #34 ;
INFO  21:54:59,750 - #37 {
INFO  21:54:59,750 - #14 val
INFO  21:54:59,750 - #32 =
INFO  21:54:59,750 - #12 new
INFO  21:54:59,750 - #14 Table
INFO  21:54:59,750 - #35 (
INFO  21:54:59,750 - #36 )
INFO  21:54:59,750 - #34 ;
INFO  21:54:59,751 - #14 val
INFO  21:54:59,751 - #51 .
INFO  21:54:59,751 - #14 setfactor
INFO  21:54:59,751 - #35 (
INFO  21:54:59,751 - #15 2
INFO  21:54:59,751 - #36 )
INFO  21:54:59,751 - #34 ;
INFO  21:54:59,751 - #14 arr
INFO  21:54:59,751 - #32 =
INFO  21:54:59,751 - #12 new
INFO  21:54:59,751 - #5 int
INFO  21:54:59,751 - #52 [
INFO  21:54:59,751 - #15 3
INFO  21:54:59,751 - #53 ]
INFO  21:54:59,751 - #34 ;
INFO  21:54:59,751 - #10 for
INFO  21:54:59,751 - #35 (
INFO  21:54:59,751 - #14 i
INFO  21:54:59,751 - #32 =
INFO  21:54:59,751 - #15 0
INFO  21:54:59,751 - #34 ;
INFO  21:54:59,751 - #14 i
INFO  21:54:59,751 - #25 <
INFO  21:54:59,751 - #15 3
INFO  21:54:59,751 - #34 ;
INFO  21:54:59,751 - #14 i
INFO  21:54:59,751 - #49 ++
INFO  21:54:59,751 - #36 )
INFO  21:54:59,751 - #37 {
INFO  21:54:59,751 - #14 arr
INFO  21:54:59,751 - #52 [
INFO  21:54:59,751 - #14 i
INFO  21:54:59,751 - #53 ]
INFO  21:54:59,751 - #32 =
INFO  21:54:59,751 - #14 i
INFO  21:54:59,751 - #34 ;
INFO  21:54:59,751 - #38 }
INFO  21:54:59,751 - #10 for
INFO  21:54:59,753 - #35 (
INFO  21:54:59,753 - #14 i
INFO  21:54:59,753 - #32 =
INFO  21:54:59,753 - #15 0
INFO  21:54:59,753 - #34 ;
INFO  21:54:59,753 - #14 i
INFO  21:54:59,753 - #25 <
INFO  21:54:59,753 - #15 3
INFO  21:54:59,753 - #34 ;
INFO  21:54:59,753 - #14 i
INFO  21:54:59,753 - #49 ++
INFO  21:54:59,753 - #36 )
INFO  21:54:59,753 - #2 print
INFO  21:54:59,753 - #35 (
INFO  21:54:59,753 - #14 arr
INFO  21:54:59,753 - #52 [
INFO  21:54:59,753 - #14 i
INFO  21:54:59,753 - #53 ]
INFO  21:54:59,753 - #36 )
INFO  21:54:59,753 - #34 ;
INFO  21:54:59,753 - #14 val
INFO  21:54:59,753 - #51 .
INFO  21:54:59,753 - #14 pos
INFO  21:54:59,753 - #32 =
INFO  21:54:59,753 - #12 new
INFO  21:54:59,753 - #5 int
INFO  21:54:59,753 - #52 [
INFO  21:54:59,753 - #14 sizes
INFO  21:54:59,753 - #54 ::
INFO  21:54:59,754 - #14 tableSize
INFO  21:54:59,754 - #53 ]
INFO  21:54:59,754 - #34 ;
INFO  21:54:59,754 - #14 val
INFO  21:54:59,754 - #51 .
INFO  21:54:59,754 - #14 neg
INFO  21:54:59,754 - #32 =
INFO  21:54:59,754 - #12 new
INFO  21:54:59,754 - #5 int
INFO  21:54:59,754 - #52 [
INFO  21:54:59,754 - #14 sizes
INFO  21:54:59,754 - #54 ::
INFO  21:54:59,754 - #14 tableSize
INFO  21:54:59,754 - #53 ]
INFO  21:54:59,754 - #34 ;
INFO  21:54:59,754 - #14 read
INFO  21:54:59,754 - #35 (
INFO  21:54:59,754 - #14 x
INFO  21:54:59,754 - #36 )
INFO  21:54:59,754 - #34 ;
INFO  21:54:59,754 - #10 for
INFO  21:54:59,754 - #35 (
INFO  21:54:59,754 - #34 ;
INFO  21:54:59,755 - #14 i
INFO  21:54:59,755 - #25 <
INFO  21:54:59,755 - #14 sizes
INFO  21:54:59,755 - #54 ::
INFO  21:54:59,755 - #14 tableSize
INFO  21:54:59,755 - #34 ;
INFO  21:54:59,755 - #14 i
INFO  21:54:59,755 - #49 ++
INFO  21:54:59,755 - #36 )
INFO  21:54:59,755 - #37 {
INFO  21:54:59,755 - #14 val
INFO  21:54:59,755 - #51 .
INFO  21:54:59,755 - #14 putp
INFO  21:54:59,755 - #35 (
INFO  21:54:59,755 - #15 0
INFO  21:54:59,755 - #33 ,
INFO  21:54:59,755 - #14 i
INFO  21:54:59,755 - #36 )
INFO  21:54:59,755 - #34 ;
INFO  21:54:59,756 - #14 val
INFO  21:54:59,756 - #51 .
INFO  21:54:59,756 - #14 putn
INFO  21:54:59,756 - #35 (
INFO  21:54:59,756 - #15 0
INFO  21:54:59,756 - #33 ,
INFO  21:54:59,756 - #14 i
INFO  21:54:59,756 - #36 )
INFO  21:54:59,756 - #34 ;
INFO  21:54:59,756 - #38 }
INFO  21:54:59,756 - #14 f
INFO  21:54:59,756 - #35 (
INFO  21:54:59,756 - #14 c
INFO  21:54:59,756 - #33 ,
INFO  21:54:59,756 - #14 x
INFO  21:54:59,756 - #33 ,
INFO  21:54:59,756 - #14 i
INFO  21:54:59,756 - #36 )
INFO  21:54:59,756 - #34 ;
INFO  21:54:59,756 - #14 read
INFO  21:54:59,756 - #35 (
INFO  21:54:59,756 - #14 rows
INFO  21:54:59,756 - #36 )
INFO  21:54:59,756 - #34 ;
INFO  21:54:59,756 - #14 x
INFO  21:54:59,756 - #32 =
INFO  21:54:59,757 - #14 rows
INFO  21:54:59,757 - #34 ;
INFO  21:54:59,757 - #10 for
INFO  21:54:59,757 - #35 (
INFO  21:54:59,757 - #34 ;
INFO  21:54:59,757 - #34 ;
INFO  21:54:59,760 - #36 )
INFO  21:54:59,760 - #37 {
INFO  21:54:59,760 - #8 if
INFO  21:54:59,760 - #35 (
INFO  21:54:59,760 - #14 x
INFO  21:54:59,760 - #26 <=
INFO  21:54:59,760 - #15 0
INFO  21:54:59,760 - #36 )
INFO  21:54:59,760 - #14 break
INFO  21:54:59,760 - #34 ;
INFO  21:54:59,760 - #8 if
INFO  21:54:59,760 - #35 (
INFO  21:54:59,760 - #15 0
INFO  21:54:59,760 - #26 <=
INFO  21:54:59,760 - #14 x
INFO  21:54:59,760 - #29 &&
INFO  21:54:59,760 - #14 x
INFO  21:54:59,760 - #25 <
INFO  21:54:59,760 - #14 sizes
INFO  21:54:59,760 - #54 ::
INFO  21:54:59,760 - #14 tableSize
INFO  21:54:59,760 - #36 )
INFO  21:54:59,760 - #37 {
INFO  21:54:59,760 - #14 val
INFO  21:54:59,760 - #51 .
INFO  21:54:59,760 - #14 putp
INFO  21:54:59,760 - #35 (
INFO  21:54:59,760 - #14 val
INFO  21:54:59,760 - #51 .
INFO  21:54:59,760 - #14 getp
INFO  21:54:59,760 - #35 (
INFO  21:54:59,761 - #14 x
INFO  21:54:59,761 - #36 )
INFO  21:54:59,761 - #18 +
INFO  21:54:59,761 - #15 1
INFO  21:54:59,761 - #36 )
INFO  21:54:59,761 - #34 ;
INFO  21:54:59,761 - #38 }
INFO  21:54:59,761 - #9 else
INFO  21:54:59,761 - #8 if
INFO  21:54:59,761 - #35 (
INFO  21:54:59,761 - #14 sizes
INFO  21:54:59,761 - #54 ::
INFO  21:54:59,761 - #14 tableSize
INFO  21:54:59,761 - #25 <
INFO  21:54:59,761 - #14 x
INFO  21:54:59,761 - #29 &&
INFO  21:54:59,761 - #14 x
INFO  21:54:59,761 - #25 <
INFO  21:54:59,761 - #15 0
INFO  21:54:59,761 - #36 )
INFO  21:54:59,761 - #37 {
INFO  21:54:59,761 - #14 val
INFO  21:54:59,761 - #51 .
INFO  21:54:59,761 - #14 putn
INFO  21:54:59,761 - #35 (
INFO  21:54:59,761 - #14 val
INFO  21:54:59,761 - #51 .
INFO  21:54:59,761 - #14 getn
INFO  21:54:59,761 - #35 (
INFO  21:54:59,761 - #19 -
INFO  21:54:59,761 - #14 x
INFO  21:54:59,761 - #36 )
INFO  21:54:59,761 - #18 +
INFO  21:54:59,761 - #15 1
INFO  21:54:59,762 - #36 )
INFO  21:54:59,762 - #34 ;
INFO  21:54:59,762 - #38 }
INFO  21:54:59,762 - #14 read
INFO  21:54:59,762 - #35 (
INFO  21:54:59,762 - #14 x
INFO  21:54:59,762 - #36 )
INFO  21:54:59,762 - #34 ;
INFO  21:54:59,762 - #38 }
INFO  21:54:59,762 - #38 }
INFO  21:54:59,762 - #38 }
