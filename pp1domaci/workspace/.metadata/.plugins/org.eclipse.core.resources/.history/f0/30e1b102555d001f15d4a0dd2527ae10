INFO  21:46:09,038 - Compiling source file: C:\Users\anjci\OneDrive\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:46:09,040 - #1 program
INFO  21:46:09,040 - #14 p
INFO  21:46:09,040 - #14 Table
INFO  21:46:09,040 - #14 val
INFO  21:46:09,040 - #34 ;
INFO  21:46:09,040 - #5 int
INFO  21:46:09,040 - #14 rows
INFO  21:46:09,040 - #33 ,
INFO  21:46:09,040 - #14 columns
INFO  21:46:09,040 - #34 ;
INFO  21:46:09,040 - #37 {
INFO  21:46:09,040 - #4 void
INFO  21:46:09,040 - #14 f
INFO  21:46:09,040 - #35 (
INFO  21:46:09,040 - #6 char
INFO  21:46:09,040 - #14 ch
INFO  21:46:09,040 - #33 ,
INFO  21:46:09,040 - #5 int
INFO  21:46:09,040 - #14 a
INFO  21:46:09,040 - #33 ,
INFO  21:46:09,040 - #5 int
INFO  21:46:09,050 - #14 arg
INFO  21:46:09,050 - #36 )
INFO  21:46:09,050 - #5 int
INFO  21:46:09,050 - #14 x
INFO  21:46:09,050 - #34 ;
INFO  21:46:09,050 - #37 {
INFO  21:46:09,050 - #14 x
INFO  21:46:09,050 - #32 =
INFO  21:46:09,050 - #14 arg
INFO  21:46:09,050 - #34 ;
INFO  21:46:09,050 - #38 }
INFO  21:46:09,050 - #4 void
INFO  21:46:09,050 - #14 main
INFO  21:46:09,050 - #35 (
INFO  21:46:09,050 - #36 )
INFO  21:46:09,050 - #5 int
INFO  21:46:09,051 - #14 x
INFO  21:46:09,051 - #33 ,
INFO  21:46:09,051 - #14 i
INFO  21:46:09,051 - #34 ;
INFO  21:46:09,051 - #6 char
INFO  21:46:09,051 - #14 c
INFO  21:46:09,051 - #33 ,
INFO  21:46:09,051 - #5 int
INFO  21:46:09,051 - #14 arr
INFO  21:46:09,051 - #34 ;
INFO  21:46:09,051 - #37 {
INFO  21:46:09,051 - #14 val
INFO  21:46:09,051 - #32 =
INFO  21:46:09,051 - #12 new
INFO  21:46:09,051 - #14 Table
INFO  21:46:09,051 - #35 (
INFO  21:46:09,051 - #36 )
INFO  21:46:09,052 - #34 ;
INFO  21:46:09,052 - #14 val
INFO  21:46:09,052 - #49 .
INFO  21:46:09,052 - #14 setfactor
INFO  21:46:09,052 - #35 (
INFO  21:46:09,052 - #15 2
INFO  21:46:09,052 - #36 )
INFO  21:46:09,052 - #34 ;
INFO  21:46:09,052 - #14 arr
INFO  21:46:09,052 - #32 =
INFO  21:46:09,052 - #12 new
INFO  21:46:09,052 - #5 int
INFO  21:46:09,052 - #15 3
INFO  21:46:09,052 - #34 ;
INFO  21:46:09,052 - #10 for
INFO  21:46:09,052 - #35 (
INFO  21:46:09,052 - #14 i
INFO  21:46:09,053 - #32 =
INFO  21:46:09,053 - #15 0
INFO  21:46:09,053 - #34 ;
INFO  21:46:09,053 - #14 i
INFO  21:46:09,053 - #25 <
INFO  21:46:09,053 - #15 3
INFO  21:46:09,053 - #34 ;
INFO  21:46:09,053 - #14 i
INFO  21:46:09,053 - #47 ++
INFO  21:46:09,053 - #36 )
INFO  21:46:09,053 - #37 {
INFO  21:46:09,053 - #14 arr
INFO  21:46:09,053 - #14 i
INFO  21:46:09,053 - #32 =
INFO  21:46:09,053 - #14 i
INFO  21:46:09,053 - #34 ;
INFO  21:46:09,053 - #38 }
INFO  21:46:09,053 - #10 for
INFO  21:46:09,053 - #35 (
INFO  21:46:09,054 - #14 i
INFO  21:46:09,054 - #32 =
INFO  21:46:09,054 - #15 0
INFO  21:46:09,054 - #34 ;
INFO  21:46:09,054 - #14 i
INFO  21:46:09,054 - #25 <
INFO  21:46:09,054 - #15 3
INFO  21:46:09,054 - #34 ;
INFO  21:46:09,054 - #14 i
INFO  21:46:09,054 - #47 ++
INFO  21:46:09,054 - #36 )
INFO  21:46:09,054 - #2 print
INFO  21:46:09,054 - #35 (
INFO  21:46:09,054 - #14 arr
INFO  21:46:09,054 - #14 i
INFO  21:46:09,054 - #36 )
INFO  21:46:09,054 - #34 ;
INFO  21:46:09,054 - #14 val
INFO  21:46:09,054 - #49 .
INFO  21:46:09,054 - #14 pos
INFO  21:46:09,054 - #32 =
INFO  21:46:09,055 - #12 new
INFO  21:46:09,055 - #5 int
INFO  21:46:09,055 - #14 sizes
INFO  21:46:09,055 - #46 ::
INFO  21:46:09,055 - #14 tableSize
INFO  21:46:09,055 - #34 ;
INFO  21:46:09,055 - #14 val
INFO  21:46:09,055 - #49 .
INFO  21:46:09,055 - #14 neg
INFO  21:46:09,055 - #32 =
INFO  21:46:09,055 - #12 new
INFO  21:46:09,055 - #5 int
INFO  21:46:09,055 - #14 sizes
INFO  21:46:09,055 - #46 ::
INFO  21:46:09,055 - #14 tableSize
INFO  21:46:09,055 - #34 ;
INFO  21:46:09,055 - #14 read
INFO  21:46:09,056 - #35 (
INFO  21:46:09,056 - #14 x
INFO  21:46:09,056 - #36 )
INFO  21:46:09,056 - #34 ;
INFO  21:46:09,056 - #10 for
INFO  21:46:09,056 - #35 (
INFO  21:46:09,058 - #34 ;
INFO  21:46:09,059 - #14 i
INFO  21:46:09,059 - #25 <
INFO  21:46:09,059 - #14 sizes
INFO  21:46:09,059 - #46 ::
INFO  21:46:09,059 - #14 tableSize
INFO  21:46:09,059 - #34 ;
INFO  21:46:09,059 - #14 i
INFO  21:46:09,059 - #47 ++
INFO  21:46:09,059 - #36 )
INFO  21:46:09,059 - #37 {
INFO  21:46:09,059 - #14 val
INFO  21:46:09,059 - #49 .
INFO  21:46:09,059 - #14 putp
INFO  21:46:09,059 - #35 (
INFO  21:46:09,059 - #15 0
INFO  21:46:09,059 - #33 ,
INFO  21:46:09,059 - #14 i
INFO  21:46:09,059 - #36 )
INFO  21:46:09,059 - #34 ;
INFO  21:46:09,059 - #14 val
INFO  21:46:09,059 - #49 .
INFO  21:46:09,059 - #14 putn
INFO  21:46:09,059 - #35 (
INFO  21:46:09,060 - #15 0
INFO  21:46:09,060 - #33 ,
INFO  21:46:09,060 - #14 i
INFO  21:46:09,060 - #36 )
INFO  21:46:09,060 - #34 ;
INFO  21:46:09,060 - #38 }
INFO  21:46:09,060 - #14 f
INFO  21:46:09,060 - #35 (
INFO  21:46:09,060 - #14 c
INFO  21:46:09,060 - #33 ,
INFO  21:46:09,060 - #14 x
INFO  21:46:09,061 - #33 ,
INFO  21:46:09,061 - #14 i
INFO  21:46:09,061 - #36 )
INFO  21:46:09,061 - #34 ;
INFO  21:46:09,061 - #14 read
INFO  21:46:09,061 - #35 (
INFO  21:46:09,061 - #14 rows
INFO  21:46:09,061 - #36 )
INFO  21:46:09,061 - #34 ;
INFO  21:46:09,061 - #14 x
INFO  21:46:09,061 - #32 =
INFO  21:46:09,061 - #14 rows
INFO  21:46:09,061 - #34 ;
INFO  21:46:09,061 - #10 for
INFO  21:46:09,061 - #35 (
INFO  21:46:09,061 - #34 ;
INFO  21:46:09,061 - #34 ;
INFO  21:46:09,061 - #36 )
INFO  21:46:09,061 - #37 {
INFO  21:46:09,061 - #8 if
INFO  21:46:09,061 - #35 (
INFO  21:46:09,061 - #14 x
INFO  21:46:09,061 - #26 <=
INFO  21:46:09,062 - #15 0
INFO  21:46:09,062 - #36 )
INFO  21:46:09,062 - #14 break
INFO  21:46:09,062 - #34 ;
INFO  21:46:09,062 - #8 if
INFO  21:46:09,062 - #35 (
INFO  21:46:09,062 - #15 0
INFO  21:46:09,062 - #26 <=
INFO  21:46:09,062 - #14 x
INFO  21:46:09,062 - #29 &&
INFO  21:46:09,062 - #14 x
INFO  21:46:09,062 - #25 <
INFO  21:46:09,062 - #14 sizes
INFO  21:46:09,062 - #46 ::
INFO  21:46:09,062 - #14 tableSize
INFO  21:46:09,062 - #36 )
INFO  21:46:09,062 - #37 {
INFO  21:46:09,062 - #14 val
INFO  21:46:09,062 - #49 .
INFO  21:46:09,062 - #14 putp
INFO  21:46:09,062 - #35 (
INFO  21:46:09,062 - #14 val
INFO  21:46:09,062 - #49 .
INFO  21:46:09,062 - #14 getp
INFO  21:46:09,062 - #35 (
INFO  21:46:09,062 - #14 x
INFO  21:46:09,062 - #36 )
INFO  21:46:09,062 - #18 +
INFO  21:46:09,063 - #15 1
INFO  21:46:09,063 - #36 )
INFO  21:46:09,063 - #34 ;
INFO  21:46:09,063 - #38 }
INFO  21:46:09,063 - #9 else
INFO  21:46:09,063 - #8 if
INFO  21:46:09,063 - #35 (
INFO  21:46:09,063 - #14 sizes
INFO  21:46:09,063 - #46 ::
INFO  21:46:09,063 - #14 tableSize
INFO  21:46:09,063 - #25 <
INFO  21:46:09,063 - #14 x
INFO  21:46:09,063 - #29 &&
INFO  21:46:09,063 - #14 x
INFO  21:46:09,063 - #25 <
INFO  21:46:09,063 - #15 0
INFO  21:46:09,063 - #36 )
INFO  21:46:09,063 - #37 {
INFO  21:46:09,063 - #14 val
INFO  21:46:09,063 - #49 .
INFO  21:46:09,063 - #14 putn
INFO  21:46:09,063 - #35 (
INFO  21:46:09,063 - #14 val
INFO  21:46:09,064 - #49 .
INFO  21:46:09,064 - #14 getn
INFO  21:46:09,064 - #35 (
INFO  21:46:09,064 - #19 -
INFO  21:46:09,064 - #14 x
INFO  21:46:09,064 - #36 )
INFO  21:46:09,064 - #18 +
INFO  21:46:09,064 - #15 1
INFO  21:46:09,064 - #36 )
INFO  21:46:09,064 - #34 ;
INFO  21:46:09,064 - #38 }
INFO  21:46:09,064 - #14 read
INFO  21:46:09,065 - #35 (
INFO  21:46:09,065 - #14 x
INFO  21:46:09,065 - #36 )
INFO  21:46:09,065 - #34 ;
INFO  21:46:09,065 - #38 }
INFO  21:46:09,065 - #38 }
INFO  21:46:09,065 - #38 }
