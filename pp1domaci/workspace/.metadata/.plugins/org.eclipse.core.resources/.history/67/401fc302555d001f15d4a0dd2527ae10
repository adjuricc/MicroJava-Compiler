INFO  21:45:51,181 - Compiling source file: C:\Users\anjci\OneDrive\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:45:51,184 - #1 program
INFO  21:45:51,184 - #14 p
INFO  21:45:51,184 - #14 Table
INFO  21:45:51,184 - #14 val
INFO  21:45:51,184 - #34 ;
INFO  21:45:51,184 - #5 int
INFO  21:45:51,184 - #14 rows
INFO  21:45:51,184 - #33 ,
INFO  21:45:51,184 - #14 columns
INFO  21:45:51,184 - #34 ;
INFO  21:45:51,184 - #37 {
INFO  21:45:51,184 - #4 void
INFO  21:45:51,184 - #14 f
INFO  21:45:51,184 - #35 (
INFO  21:45:51,185 - #6 char
INFO  21:45:51,185 - #14 ch
INFO  21:45:51,185 - #33 ,
INFO  21:45:51,185 - #5 int
INFO  21:45:51,185 - #14 a
INFO  21:45:51,185 - #33 ,
INFO  21:45:51,185 - #5 int
INFO  21:45:51,193 - #14 arg
INFO  21:45:51,193 - #36 )
INFO  21:45:51,193 - #5 int
INFO  21:45:51,193 - #14 x
INFO  21:45:51,193 - #34 ;
INFO  21:45:51,193 - #37 {
INFO  21:45:51,193 - #14 x
INFO  21:45:51,193 - #32 =
INFO  21:45:51,193 - #14 arg
INFO  21:45:51,193 - #34 ;
INFO  21:45:51,193 - #38 }
INFO  21:45:51,193 - #4 void
INFO  21:45:51,193 - #14 main
INFO  21:45:51,193 - #35 (
INFO  21:45:51,193 - #36 )
INFO  21:45:51,193 - #5 int
INFO  21:45:51,193 - #14 x
INFO  21:45:51,193 - #33 ,
INFO  21:45:51,193 - #14 i
INFO  21:45:51,193 - #34 ;
INFO  21:45:51,193 - #6 char
INFO  21:45:51,193 - #14 c
INFO  21:45:51,194 - #33 ,
INFO  21:45:51,194 - #5 int
INFO  21:45:51,194 - #14 arr
INFO  21:45:51,194 - #34 ;
INFO  21:45:51,194 - #37 {
INFO  21:45:51,194 - #14 val
INFO  21:45:51,194 - #32 =
INFO  21:45:51,194 - #12 new
INFO  21:45:51,194 - #14 Table
INFO  21:45:51,194 - #35 (
INFO  21:45:51,194 - #36 )
INFO  21:45:51,194 - #34 ;
INFO  21:45:51,194 - #14 val
INFO  21:45:51,194 - #49 .
INFO  21:45:51,194 - #14 setfactor
INFO  21:45:51,194 - #35 (
INFO  21:45:51,194 - #15 2
INFO  21:45:51,194 - #36 )
INFO  21:45:51,194 - #34 ;
INFO  21:45:51,194 - #14 arr
INFO  21:45:51,194 - #32 =
INFO  21:45:51,195 - #12 new
INFO  21:45:51,195 - #5 int
INFO  21:45:51,195 - #15 3
INFO  21:45:51,195 - #34 ;
INFO  21:45:51,195 - #10 for
INFO  21:45:51,195 - #35 (
INFO  21:45:51,195 - #14 i
INFO  21:45:51,195 - #32 =
INFO  21:45:51,195 - #15 0
INFO  21:45:51,195 - #34 ;
INFO  21:45:51,195 - #14 i
INFO  21:45:51,195 - #25 <
INFO  21:45:51,195 - #15 3
INFO  21:45:51,195 - #34 ;
INFO  21:45:51,195 - #14 i
INFO  21:45:51,195 - #47 ++
INFO  21:45:51,195 - #36 )
INFO  21:45:51,195 - #37 {
INFO  21:45:51,195 - #14 arr
INFO  21:45:51,195 - #14 i
INFO  21:45:51,195 - #32 =
INFO  21:45:51,195 - #14 i
INFO  21:45:51,195 - #34 ;
INFO  21:45:51,195 - #38 }
INFO  21:45:51,195 - #10 for
INFO  21:45:51,195 - #35 (
INFO  21:45:51,195 - #14 i
INFO  21:45:51,195 - #32 =
INFO  21:45:51,196 - #15 0
INFO  21:45:51,196 - #34 ;
INFO  21:45:51,196 - #14 i
INFO  21:45:51,196 - #25 <
INFO  21:45:51,196 - #15 3
INFO  21:45:51,196 - #34 ;
INFO  21:45:51,196 - #14 i
INFO  21:45:51,196 - #47 ++
INFO  21:45:51,196 - #36 )
INFO  21:45:51,196 - #2 print
INFO  21:45:51,196 - #35 (
INFO  21:45:51,196 - #14 arr
INFO  21:45:51,196 - #14 i
INFO  21:45:51,196 - #36 )
INFO  21:45:51,196 - #34 ;
INFO  21:45:51,196 - #14 val
INFO  21:45:51,196 - #49 .
INFO  21:45:51,196 - #14 pos
INFO  21:45:51,196 - #32 =
INFO  21:45:51,196 - #12 new
INFO  21:45:51,196 - #5 int
INFO  21:45:51,196 - #14 sizes
INFO  21:45:51,196 - #46 ::
INFO  21:45:51,196 - #14 tableSize
INFO  21:45:51,196 - #34 ;
INFO  21:45:51,196 - #14 val
INFO  21:45:51,196 - #49 .
INFO  21:45:51,196 - #14 neg
INFO  21:45:51,196 - #32 =
INFO  21:45:51,196 - #12 new
INFO  21:45:51,196 - #5 int
INFO  21:45:51,197 - #14 sizes
INFO  21:45:51,197 - #46 ::
INFO  21:45:51,197 - #14 tableSize
INFO  21:45:51,197 - #34 ;
INFO  21:45:51,197 - #14 read
INFO  21:45:51,197 - #35 (
INFO  21:45:51,197 - #14 x
INFO  21:45:51,197 - #36 )
INFO  21:45:51,197 - #34 ;
INFO  21:45:51,197 - #10 for
INFO  21:45:51,197 - #35 (
INFO  21:45:51,199 - #34 ;
INFO  21:45:51,199 - #14 i
INFO  21:45:51,199 - #25 <
INFO  21:45:51,199 - #14 sizes
INFO  21:45:51,199 - #46 ::
INFO  21:45:51,199 - #14 tableSize
INFO  21:45:51,199 - #34 ;
INFO  21:45:51,199 - #14 i
INFO  21:45:51,199 - #47 ++
INFO  21:45:51,199 - #36 )
INFO  21:45:51,199 - #37 {
INFO  21:45:51,199 - #14 val
INFO  21:45:51,199 - #49 .
INFO  21:45:51,199 - #14 putp
INFO  21:45:51,199 - #35 (
INFO  21:45:51,199 - #15 0
INFO  21:45:51,199 - #33 ,
INFO  21:45:51,199 - #14 i
INFO  21:45:51,199 - #36 )
INFO  21:45:51,199 - #34 ;
INFO  21:45:51,199 - #14 val
INFO  21:45:51,199 - #49 .
INFO  21:45:51,199 - #14 putn
INFO  21:45:51,199 - #35 (
INFO  21:45:51,199 - #15 0
INFO  21:45:51,199 - #33 ,
INFO  21:45:51,199 - #14 i
INFO  21:45:51,201 - #36 )
INFO  21:45:51,201 - #34 ;
INFO  21:45:51,201 - #38 }
INFO  21:45:51,201 - #14 f
INFO  21:45:51,201 - #35 (
INFO  21:45:51,201 - #14 c
INFO  21:45:51,201 - #33 ,
INFO  21:45:51,201 - #14 x
INFO  21:45:51,201 - #33 ,
INFO  21:45:51,201 - #14 i
INFO  21:45:51,201 - #36 )
INFO  21:45:51,201 - #34 ;
INFO  21:45:51,201 - #14 read
INFO  21:45:51,201 - #35 (
INFO  21:45:51,201 - #14 rows
INFO  21:45:51,201 - #36 )
INFO  21:45:51,201 - #34 ;
INFO  21:45:51,201 - #14 x
INFO  21:45:51,201 - #32 =
INFO  21:45:51,201 - #14 rows
INFO  21:45:51,201 - #34 ;
INFO  21:45:51,201 - #10 for
INFO  21:45:51,201 - #35 (
INFO  21:45:51,201 - #34 ;
INFO  21:45:51,201 - #34 ;
INFO  21:45:51,201 - #36 )
INFO  21:45:51,201 - #37 {
INFO  21:45:51,201 - #8 if
INFO  21:45:51,201 - #35 (
INFO  21:45:51,201 - #14 x
INFO  21:45:51,201 - #26 <=
INFO  21:45:51,201 - #15 0
INFO  21:45:51,201 - #36 )
INFO  21:45:51,201 - #14 break
INFO  21:45:51,201 - #34 ;
INFO  21:45:51,201 - #8 if
INFO  21:45:51,201 - #35 (
INFO  21:45:51,201 - #15 0
INFO  21:45:51,201 - #26 <=
INFO  21:45:51,201 - #14 x
INFO  21:45:51,201 - #29 &&
INFO  21:45:51,201 - #14 x
INFO  21:45:51,201 - #25 <
INFO  21:45:51,201 - #14 sizes
INFO  21:45:51,202 - #46 ::
INFO  21:45:51,202 - #14 tableSize
INFO  21:45:51,202 - #36 )
INFO  21:45:51,202 - #37 {
INFO  21:45:51,202 - #14 val
INFO  21:45:51,202 - #49 .
INFO  21:45:51,202 - #14 putp
INFO  21:45:51,202 - #35 (
INFO  21:45:51,202 - #14 val
INFO  21:45:51,202 - #49 .
INFO  21:45:51,202 - #14 getp
INFO  21:45:51,202 - #35 (
INFO  21:45:51,202 - #14 x
INFO  21:45:51,202 - #36 )
INFO  21:45:51,202 - #18 +
INFO  21:45:51,202 - #15 1
INFO  21:45:51,202 - #36 )
INFO  21:45:51,202 - #34 ;
INFO  21:45:51,202 - #38 }
INFO  21:45:51,202 - #9 else
INFO  21:45:51,202 - #8 if
INFO  21:45:51,202 - #35 (
INFO  21:45:51,202 - #14 sizes
INFO  21:45:51,202 - #46 ::
INFO  21:45:51,202 - #14 tableSize
INFO  21:45:51,202 - #25 <
INFO  21:45:51,202 - #14 x
INFO  21:45:51,202 - #29 &&
INFO  21:45:51,202 - #14 x
INFO  21:45:51,202 - #25 <
INFO  21:45:51,202 - #15 0
INFO  21:45:51,203 - #36 )
INFO  21:45:51,203 - #37 {
INFO  21:45:51,203 - #14 val
INFO  21:45:51,203 - #49 .
INFO  21:45:51,203 - #14 putn
INFO  21:45:51,203 - #35 (
INFO  21:45:51,203 - #14 val
INFO  21:45:51,203 - #49 .
INFO  21:45:51,203 - #14 getn
INFO  21:45:51,203 - #35 (
INFO  21:45:51,203 - #14 x
INFO  21:45:51,203 - #36 )
INFO  21:45:51,203 - #18 +
INFO  21:45:51,203 - #15 1
INFO  21:45:51,203 - #36 )
INFO  21:45:51,203 - #34 ;
INFO  21:45:51,203 - #38 }
INFO  21:45:51,203 - #14 read
INFO  21:45:51,203 - #35 (
INFO  21:45:51,203 - #14 x
INFO  21:45:51,203 - #36 )
INFO  21:45:51,203 - #34 ;
INFO  21:45:51,203 - #38 }
INFO  21:45:51,203 - #38 }
INFO  21:45:51,203 - #38 }
