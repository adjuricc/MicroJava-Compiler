
terminal PROG, IDENT, LBRACE, RBRACE, IDENT, SEMI, LPAREN, RPAREN, COMMA, EQUAL, PRINT, RETURN, NUMBER;

nonterminal Program, VarDeclList, MethodDeclList, VarDecl, Type, MethodDecl;
nonterminal FormPars, StatementList, FormalParamList, FormalParamDecl, Statement;
nonterminal Designator, Expr, AddOp, Term, Factor, ActualPars, ActualParamList;

Program ::= (Program) PROG IDENT VarDeclList LBRACE MethodDeclList RBRACE;

VarDeclList ::= (VarDeclarations) VarDeclList VarDecl
			|
			(NoVarDecl)/* epsilon */
			;

VarDecl ::= (VarDeclaration) Type:varType IDENT:varName SEMI;

MethodDeclList ::= (MethodDeclarations) MethodDeclList MethodDecl
				| 
				(NoMethodDecl) /* epsilon */
				; 

MethodDecl ::= (MethodDecl) Type:retType IDENT:methName LPAREN FormPars RPAREN VarDeclList LBRACE StatementList RBRACE;

FormPars ::= (FormParams) FormalParamList
		|
		(NoFormParam) /* epsilon */
		;
		
FormParamList ::= (FormalParamDecls) FormalParamList COMMA FormalParamDecl		
				|
				(SingleFormalParamDecl) FormalParamDecl
				;
				
StatementList ::= (Statements) StatementList Statement
				|
				(NoStatements) /* epsilon */
				;

Statement ::= (Assignment) Designator:dest EQUAL Expr:e SEMI
			|
			(PrintStatement) PRINT LPAREN Expr RPAREN SEMI
			|
			(ReturnExpr) RETURN Expr SEMI
			|
			(ReturnNoExpr) RETURN SEMI
			;
			
Expr ::= (AddExpr) Expr:te AddOp Term:t
		|
		(TermExpr) Term
		;
		
Term ::= (Term) Factor:t;		
		
Factor ::= (Const) NUMBER
		|
		(Var) Designator:d
		|
		(FuncCall) Designator:func LPAREN ActualPars RPAREN
		;

ActualPars ::= (Actuals) ActualParamList
			|
			(NoActuals) /* epsilon */
			;		

ActualParamList ::= (ActualParams) ActualParamList COMMA Expr
				|
				(ActualParam) Expr
				;			
			
			