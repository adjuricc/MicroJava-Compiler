INFO  21:55:26,682 - Compiling source file: C:\Users\anjci\OneDrive\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:55:26,686 - #1 program
INFO  21:55:26,686 - #14 p
INFO  21:55:26,686 - #14 Table
INFO  21:55:26,686 - #14 val
INFO  21:55:26,686 - #34 ;
INFO  21:55:26,686 - #5 int
INFO  21:55:26,686 - #14 rows
INFO  21:55:26,686 - #33 ,
INFO  21:55:26,686 - #14 columns
INFO  21:55:26,686 - #34 ;
INFO  21:55:26,686 - #37 {
INFO  21:55:26,686 - #4 void
INFO  21:55:26,686 - #14 f
INFO  21:55:26,686 - #35 (
INFO  21:55:26,686 - #6 char
INFO  21:55:26,686 - #14 ch
INFO  21:55:26,686 - #33 ,
INFO  21:55:26,687 - #5 int
INFO  21:55:26,687 - #14 a
INFO  21:55:26,687 - #33 ,
INFO  21:55:26,687 - #5 int
INFO  21:55:26,694 - #14 arg
INFO  21:55:26,694 - #36 )
INFO  21:55:26,694 - #5 int
INFO  21:55:26,694 - #14 x
INFO  21:55:26,694 - #34 ;
INFO  21:55:26,694 - #37 {
INFO  21:55:26,694 - #14 x
INFO  21:55:26,694 - #32 =
INFO  21:55:26,694 - #14 arg
INFO  21:55:26,694 - #34 ;
INFO  21:55:26,694 - #38 }
INFO  21:55:26,694 - #4 void
INFO  21:55:26,694 - #14 main
INFO  21:55:26,694 - #35 (
INFO  21:55:26,694 - #36 )
INFO  21:55:26,694 - #5 int
INFO  21:55:26,694 - #14 x
INFO  21:55:26,694 - #33 ,
INFO  21:55:26,694 - #14 i
INFO  21:55:26,694 - #34 ;
INFO  21:55:26,694 - #6 char
INFO  21:55:26,694 - #14 c
INFO  21:55:26,694 - #33 ,
INFO  21:55:26,694 - #5 int
INFO  21:55:26,694 - #52 [
INFO  21:55:26,694 - #53 ]
INFO  21:55:26,695 - #14 arr
INFO  21:55:26,695 - #34 ;
INFO  21:55:26,695 - #37 {
INFO  21:55:26,695 - #14 val
INFO  21:55:26,695 - #32 =
INFO  21:55:26,695 - #12 new
INFO  21:55:26,695 - #14 Table
INFO  21:55:26,695 - #35 (
INFO  21:55:26,695 - #36 )
INFO  21:55:26,695 - #34 ;
INFO  21:55:26,695 - #14 val
INFO  21:55:26,695 - #51 .
INFO  21:55:26,695 - #14 setfactor
INFO  21:55:26,695 - #35 (
INFO  21:55:26,695 - #15 2
INFO  21:55:26,695 - #36 )
INFO  21:55:26,695 - #34 ;
INFO  21:55:26,695 - #14 arr
INFO  21:55:26,695 - #32 =
INFO  21:55:26,695 - #12 new
INFO  21:55:26,695 - #5 int
INFO  21:55:26,695 - #52 [
INFO  21:55:26,695 - #15 3
INFO  21:55:26,695 - #53 ]
INFO  21:55:26,695 - #34 ;
INFO  21:55:26,695 - #10 for
INFO  21:55:26,695 - #35 (
INFO  21:55:26,695 - #14 i
INFO  21:55:26,695 - #32 =
INFO  21:55:26,695 - #15 0
INFO  21:55:26,695 - #34 ;
INFO  21:55:26,695 - #14 i
INFO  21:55:26,695 - #25 <
INFO  21:55:26,695 - #15 3
INFO  21:55:26,695 - #34 ;
INFO  21:55:26,697 - #14 i
INFO  21:55:26,697 - #49 ++
INFO  21:55:26,697 - #36 )
INFO  21:55:26,697 - #37 {
INFO  21:55:26,697 - #14 arr
INFO  21:55:26,697 - #52 [
INFO  21:55:26,697 - #14 i
INFO  21:55:26,697 - #53 ]
INFO  21:55:26,697 - #32 =
INFO  21:55:26,697 - #14 i
INFO  21:55:26,697 - #34 ;
INFO  21:55:26,697 - #38 }
INFO  21:55:26,697 - #10 for
INFO  21:55:26,697 - #35 (
INFO  21:55:26,697 - #14 i
INFO  21:55:26,697 - #32 =
INFO  21:55:26,697 - #15 0
INFO  21:55:26,697 - #34 ;
INFO  21:55:26,697 - #14 i
INFO  21:55:26,697 - #25 <
INFO  21:55:26,697 - #15 3
INFO  21:55:26,697 - #34 ;
INFO  21:55:26,697 - #14 i
INFO  21:55:26,697 - #49 ++
INFO  21:55:26,698 - #36 )
INFO  21:55:26,698 - #2 print
INFO  21:55:26,698 - #35 (
INFO  21:55:26,698 - #14 arr
INFO  21:55:26,698 - #52 [
INFO  21:55:26,698 - #14 i
INFO  21:55:26,698 - #53 ]
INFO  21:55:26,698 - #36 )
INFO  21:55:26,698 - #34 ;
INFO  21:55:26,698 - #14 val
INFO  21:55:26,698 - #51 .
INFO  21:55:26,698 - #14 pos
INFO  21:55:26,698 - #32 =
INFO  21:55:26,698 - #12 new
INFO  21:55:26,698 - #5 int
INFO  21:55:26,698 - #52 [
INFO  21:55:26,698 - #14 sizes
INFO  21:55:26,698 - #54 ::
INFO  21:55:26,698 - #14 tableSize
INFO  21:55:26,698 - #53 ]
INFO  21:55:26,698 - #34 ;
INFO  21:55:26,698 - #14 val
INFO  21:55:26,698 - #51 .
INFO  21:55:26,698 - #14 neg
INFO  21:55:26,698 - #32 =
INFO  21:55:26,698 - #12 new
INFO  21:55:26,699 - #5 int
INFO  21:55:26,699 - #52 [
INFO  21:55:26,701 - #14 sizes
INFO  21:55:26,701 - #54 ::
INFO  21:55:26,701 - #14 tableSize
INFO  21:55:26,701 - #53 ]
INFO  21:55:26,701 - #34 ;
INFO  21:55:26,701 - #14 read
INFO  21:55:26,701 - #35 (
INFO  21:55:26,701 - #14 x
INFO  21:55:26,701 - #36 )
INFO  21:55:26,701 - #34 ;
INFO  21:55:26,701 - #10 for
INFO  21:55:26,701 - #35 (
INFO  21:55:26,701 - #34 ;
INFO  21:55:26,701 - #14 i
INFO  21:55:26,701 - #25 <
INFO  21:55:26,701 - #14 sizes
INFO  21:55:26,701 - #54 ::
INFO  21:55:26,701 - #14 tableSize
INFO  21:55:26,701 - #34 ;
INFO  21:55:26,701 - #14 i
INFO  21:55:26,701 - #49 ++
INFO  21:55:26,701 - #36 )
INFO  21:55:26,701 - #37 {
INFO  21:55:26,702 - #14 val
INFO  21:55:26,702 - #51 .
INFO  21:55:26,702 - #14 putp
INFO  21:55:26,702 - #35 (
INFO  21:55:26,702 - #15 0
INFO  21:55:26,702 - #33 ,
INFO  21:55:26,702 - #14 i
INFO  21:55:26,702 - #36 )
INFO  21:55:26,702 - #34 ;
INFO  21:55:26,702 - #14 val
INFO  21:55:26,702 - #51 .
INFO  21:55:26,702 - #14 putn
INFO  21:55:26,702 - #35 (
INFO  21:55:26,702 - #15 0
INFO  21:55:26,702 - #33 ,
INFO  21:55:26,702 - #14 i
INFO  21:55:26,702 - #36 )
INFO  21:55:26,702 - #34 ;
INFO  21:55:26,702 - #38 }
INFO  21:55:26,702 - #14 f
INFO  21:55:26,702 - #35 (
INFO  21:55:26,702 - #14 c
INFO  21:55:26,702 - #33 ,
INFO  21:55:26,702 - #14 x
INFO  21:55:26,702 - #33 ,
INFO  21:55:26,702 - #14 i
INFO  21:55:26,702 - #36 )
INFO  21:55:26,702 - #34 ;
INFO  21:55:26,702 - #14 read
INFO  21:55:26,702 - #35 (
INFO  21:55:26,702 - #14 rows
INFO  21:55:26,702 - #36 )
INFO  21:55:26,702 - #34 ;
INFO  21:55:26,702 - #14 x
INFO  21:55:26,702 - #32 =
INFO  21:55:26,702 - #14 rows
INFO  21:55:26,702 - #34 ;
INFO  21:55:26,702 - #10 for
INFO  21:55:26,702 - #35 (
INFO  21:55:26,702 - #34 ;
INFO  21:55:26,703 - #34 ;
INFO  21:55:26,703 - #36 )
INFO  21:55:26,703 - #37 {
INFO  21:55:26,703 - #8 if
INFO  21:55:26,703 - #35 (
INFO  21:55:26,703 - #14 x
INFO  21:55:26,703 - #26 <=
INFO  21:55:26,703 - #15 0
INFO  21:55:26,703 - #36 )
INFO  21:55:26,703 - #14 break
INFO  21:55:26,703 - #34 ;
INFO  21:55:26,703 - #8 if
INFO  21:55:26,703 - #35 (
INFO  21:55:26,703 - #15 0
INFO  21:55:26,703 - #26 <=
INFO  21:55:26,703 - #14 x
INFO  21:55:26,703 - #29 &&
INFO  21:55:26,703 - #14 x
INFO  21:55:26,703 - #25 <
INFO  21:55:26,703 - #14 sizes
INFO  21:55:26,703 - #54 ::
INFO  21:55:26,703 - #14 tableSize
INFO  21:55:26,703 - #36 )
INFO  21:55:26,703 - #37 {
INFO  21:55:26,703 - #14 val
INFO  21:55:26,703 - #51 .
INFO  21:55:26,703 - #14 putp
INFO  21:55:26,703 - #35 (
INFO  21:55:26,703 - #14 val
INFO  21:55:26,703 - #51 .
INFO  21:55:26,703 - #14 getp
INFO  21:55:26,703 - #35 (
INFO  21:55:26,703 - #14 x
INFO  21:55:26,703 - #36 )
INFO  21:55:26,703 - #18 +
INFO  21:55:26,703 - #15 1
INFO  21:55:26,703 - #36 )
INFO  21:55:26,703 - #34 ;
INFO  21:55:26,703 - #38 }
INFO  21:55:26,703 - #9 else
INFO  21:55:26,703 - #8 if
INFO  21:55:26,703 - #35 (
INFO  21:55:26,703 - #19 -
INFO  21:55:26,703 - #14 sizes
INFO  21:55:26,703 - #54 ::
INFO  21:55:26,703 - #14 tableSize
INFO  21:55:26,703 - #25 <
INFO  21:55:26,703 - #14 x
INFO  21:55:26,704 - #29 &&
INFO  21:55:26,704 - #14 x
INFO  21:55:26,704 - #25 <
INFO  21:55:26,704 - #15 0
INFO  21:55:26,704 - #36 )
INFO  21:55:26,704 - #37 {
INFO  21:55:26,704 - #14 val
INFO  21:55:26,704 - #51 .
INFO  21:55:26,704 - #14 putn
INFO  21:55:26,704 - #35 (
INFO  21:55:26,704 - #14 val
INFO  21:55:26,704 - #51 .
INFO  21:55:26,704 - #14 getn
INFO  21:55:26,704 - #35 (
INFO  21:55:26,704 - #19 -
INFO  21:55:26,704 - #14 x
INFO  21:55:26,704 - #36 )
INFO  21:55:26,704 - #18 +
INFO  21:55:26,704 - #15 1
INFO  21:55:26,704 - #36 )
INFO  21:55:26,704 - #34 ;
INFO  21:55:26,704 - #38 }
INFO  21:55:26,704 - #14 read
INFO  21:55:26,704 - #35 (
INFO  21:55:26,704 - #14 x
INFO  21:55:26,704 - #36 )
INFO  21:55:26,704 - #34 ;
INFO  21:55:26,704 - #38 }
INFO  21:55:26,704 - #38 }
INFO  21:55:26,704 - #38 }
