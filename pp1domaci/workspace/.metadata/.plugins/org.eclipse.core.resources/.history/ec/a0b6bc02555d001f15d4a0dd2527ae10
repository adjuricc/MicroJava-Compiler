INFO  21:43:48,792 - Compiling source file: C:\Users\anjci\OneDrive\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:43:48,794 - #1 program
INFO  21:43:48,795 - #14 p
INFO  21:43:48,795 - #14 Table
INFO  21:43:48,795 - #14 val
INFO  21:43:48,795 - #34 ;
INFO  21:43:48,795 - #5 int
INFO  21:43:48,795 - #14 rows
INFO  21:43:48,795 - #33 ,
INFO  21:43:48,795 - #14 columns
INFO  21:43:48,795 - #34 ;
INFO  21:43:48,795 - #37 {
INFO  21:43:48,795 - #4 void
INFO  21:43:48,795 - #14 f
INFO  21:43:48,795 - #35 (
INFO  21:43:48,795 - #6 char
INFO  21:43:48,795 - #14 ch
INFO  21:43:48,795 - #33 ,
INFO  21:43:48,795 - #5 int
INFO  21:43:48,795 - #14 a
INFO  21:43:48,795 - #33 ,
INFO  21:43:48,795 - #5 int
INFO  21:43:48,804 - #14 arg
INFO  21:43:48,804 - #36 )
INFO  21:43:48,804 - #5 int
INFO  21:43:48,804 - #14 x
INFO  21:43:48,804 - #34 ;
INFO  21:43:48,804 - #37 {
INFO  21:43:48,804 - #14 x
INFO  21:43:48,804 - #32 =
INFO  21:43:48,804 - #14 arg
INFO  21:43:48,804 - #34 ;
INFO  21:43:48,804 - #38 }
INFO  21:43:48,804 - #4 void
INFO  21:43:48,804 - #14 main
INFO  21:43:48,804 - #35 (
INFO  21:43:48,804 - #36 )
INFO  21:43:48,804 - #5 int
INFO  21:43:48,804 - #14 x
INFO  21:43:48,804 - #33 ,
INFO  21:43:48,804 - #14 i
INFO  21:43:48,804 - #34 ;
INFO  21:43:48,804 - #6 char
INFO  21:43:48,804 - #14 c
INFO  21:43:48,804 - #33 ,
INFO  21:43:48,804 - #5 int
INFO  21:43:48,804 - #14 arr
INFO  21:43:48,805 - #34 ;
INFO  21:43:48,805 - #37 {
INFO  21:43:48,805 - #14 val
INFO  21:43:48,805 - #32 =
INFO  21:43:48,805 - #12 new
INFO  21:43:48,805 - #14 Table
INFO  21:43:48,805 - #35 (
INFO  21:43:48,805 - #36 )
INFO  21:43:48,805 - #34 ;
INFO  21:43:48,805 - #14 val
INFO  21:43:48,805 - #14 setfactor
INFO  21:43:48,805 - #35 (
INFO  21:43:48,805 - #15 2
INFO  21:43:48,805 - #36 )
INFO  21:43:48,805 - #34 ;
INFO  21:43:48,805 - #14 arr
INFO  21:43:48,805 - #32 =
INFO  21:43:48,805 - #12 new
INFO  21:43:48,805 - #5 int
INFO  21:43:48,805 - #15 3
INFO  21:43:48,805 - #34 ;
INFO  21:43:48,805 - #10 for
INFO  21:43:48,805 - #35 (
INFO  21:43:48,805 - #14 i
INFO  21:43:48,805 - #32 =
INFO  21:43:48,805 - #15 0
INFO  21:43:48,805 - #34 ;
INFO  21:43:48,805 - #14 i
INFO  21:43:48,806 - #25 <
INFO  21:43:48,806 - #15 3
INFO  21:43:48,806 - #34 ;
INFO  21:43:48,806 - #14 i
INFO  21:43:48,806 - #47 ++
INFO  21:43:48,806 - #36 )
INFO  21:43:48,806 - #37 {
INFO  21:43:48,806 - #14 arr
INFO  21:43:48,806 - #14 i
INFO  21:43:48,806 - #32 =
INFO  21:43:48,806 - #14 i
INFO  21:43:48,806 - #34 ;
INFO  21:43:48,806 - #38 }
INFO  21:43:48,806 - #10 for
INFO  21:43:48,806 - #35 (
INFO  21:43:48,806 - #14 i
INFO  21:43:48,806 - #32 =
INFO  21:43:48,806 - #15 0
INFO  21:43:48,806 - #34 ;
INFO  21:43:48,806 - #14 i
INFO  21:43:48,806 - #25 <
INFO  21:43:48,806 - #15 3
INFO  21:43:48,806 - #34 ;
INFO  21:43:48,806 - #14 i
INFO  21:43:48,806 - #47 ++
INFO  21:43:48,806 - #36 )
INFO  21:43:48,806 - #2 print
INFO  21:43:48,806 - #35 (
INFO  21:43:48,806 - #14 arr
INFO  21:43:48,806 - #14 i
INFO  21:43:48,807 - #36 )
INFO  21:43:48,807 - #34 ;
INFO  21:43:48,807 - #14 val
INFO  21:43:48,807 - #14 pos
INFO  21:43:48,807 - #32 =
INFO  21:43:48,807 - #12 new
INFO  21:43:48,807 - #5 int
INFO  21:43:48,807 - #14 sizes
INFO  21:43:48,807 - #46 ::
INFO  21:43:48,807 - #14 tableSize
INFO  21:43:48,807 - #34 ;
INFO  21:43:48,807 - #14 val
INFO  21:43:48,807 - #14 neg
INFO  21:43:48,807 - #32 =
INFO  21:43:48,807 - #12 new
INFO  21:43:48,807 - #5 int
INFO  21:43:48,807 - #14 sizes
INFO  21:43:48,807 - #46 ::
INFO  21:43:48,807 - #14 tableSize
INFO  21:43:48,807 - #34 ;
INFO  21:43:48,807 - #14 read
INFO  21:43:48,807 - #35 (
INFO  21:43:48,807 - #14 x
INFO  21:43:48,808 - #36 )
INFO  21:43:48,808 - #34 ;
INFO  21:43:48,808 - #10 for
INFO  21:43:48,808 - #35 (
INFO  21:43:48,808 - #34 ;
INFO  21:43:48,808 - #14 i
INFO  21:43:48,808 - #25 <
INFO  21:43:48,811 - #14 sizes
INFO  21:43:48,811 - #46 ::
INFO  21:43:48,811 - #14 tableSize
INFO  21:43:48,811 - #34 ;
INFO  21:43:48,811 - #14 i
INFO  21:43:48,811 - #47 ++
INFO  21:43:48,811 - #36 )
INFO  21:43:48,811 - #37 {
INFO  21:43:48,811 - #14 val
INFO  21:43:48,811 - #14 putp
INFO  21:43:48,811 - #35 (
INFO  21:43:48,811 - #15 0
INFO  21:43:48,811 - #33 ,
INFO  21:43:48,811 - #14 i
INFO  21:43:48,811 - #36 )
INFO  21:43:48,811 - #34 ;
INFO  21:43:48,811 - #14 val
INFO  21:43:48,811 - #14 putn
INFO  21:43:48,811 - #35 (
INFO  21:43:48,811 - #15 0
INFO  21:43:48,811 - #33 ,
INFO  21:43:48,811 - #14 i
INFO  21:43:48,811 - #36 )
INFO  21:43:48,811 - #34 ;
INFO  21:43:48,811 - #38 }
INFO  21:43:48,811 - #14 f
INFO  21:43:48,811 - #35 (
INFO  21:43:48,811 - #14 c
INFO  21:43:48,811 - #33 ,
INFO  21:43:48,811 - #14 x
INFO  21:43:48,811 - #33 ,
INFO  21:43:48,811 - #14 i
INFO  21:43:48,811 - #36 )
INFO  21:43:48,811 - #34 ;
INFO  21:43:48,812 - #14 read
INFO  21:43:48,812 - #35 (
INFO  21:43:48,812 - #14 rows
INFO  21:43:48,812 - #36 )
INFO  21:43:48,812 - #34 ;
INFO  21:43:48,812 - #14 x
INFO  21:43:48,812 - #32 =
INFO  21:43:48,812 - #14 rows
INFO  21:43:48,812 - #34 ;
INFO  21:43:48,812 - #10 for
INFO  21:43:48,812 - #35 (
INFO  21:43:48,812 - #34 ;
INFO  21:43:48,812 - #34 ;
INFO  21:43:48,812 - #36 )
INFO  21:43:48,812 - #37 {
INFO  21:43:48,812 - #8 if
INFO  21:43:48,812 - #35 (
INFO  21:43:48,812 - #14 x
INFO  21:43:48,812 - #26 <=
INFO  21:43:48,812 - #15 0
INFO  21:43:48,812 - #36 )
INFO  21:43:48,812 - #14 break
INFO  21:43:48,812 - #34 ;
INFO  21:43:48,812 - #8 if
INFO  21:43:48,812 - #35 (
INFO  21:43:48,812 - #15 0
INFO  21:43:48,812 - #26 <=
INFO  21:43:48,812 - #14 x
INFO  21:43:48,812 - #29 &&
INFO  21:43:48,812 - #14 x
INFO  21:43:48,812 - #25 <
INFO  21:43:48,812 - #14 sizes
INFO  21:43:48,812 - #46 ::
INFO  21:43:48,812 - #14 tableSize
INFO  21:43:48,812 - #36 )
INFO  21:43:48,812 - #37 {
INFO  21:43:48,812 - #14 val
INFO  21:43:48,812 - #14 putp
INFO  21:43:48,812 - #35 (
INFO  21:43:48,812 - #14 val
INFO  21:43:48,813 - #14 getp
INFO  21:43:48,813 - #35 (
INFO  21:43:48,813 - #14 x
INFO  21:43:48,813 - #36 )
INFO  21:43:48,813 - #18 +
INFO  21:43:48,813 - #15 1
INFO  21:43:48,813 - #36 )
INFO  21:43:48,813 - #34 ;
INFO  21:43:48,813 - #38 }
INFO  21:43:48,813 - #9 else
INFO  21:43:48,813 - #8 if
INFO  21:43:48,813 - #35 (
INFO  21:43:48,813 - #14 sizes
INFO  21:43:48,813 - #46 ::
INFO  21:43:48,813 - #14 tableSize
INFO  21:43:48,813 - #25 <
INFO  21:43:48,813 - #14 x
INFO  21:43:48,813 - #29 &&
INFO  21:43:48,813 - #14 x
INFO  21:43:48,813 - #25 <
INFO  21:43:48,813 - #15 0
INFO  21:43:48,813 - #36 )
INFO  21:43:48,813 - #37 {
INFO  21:43:48,813 - #14 val
INFO  21:43:48,813 - #14 putn
INFO  21:43:48,813 - #35 (
INFO  21:43:48,813 - #14 val
INFO  21:43:48,813 - #14 getn
INFO  21:43:48,813 - #35 (
INFO  21:43:48,813 - #14 x
INFO  21:43:48,813 - #36 )
INFO  21:43:48,813 - #18 +
INFO  21:43:48,813 - #15 1
INFO  21:43:48,813 - #36 )
INFO  21:43:48,813 - #34 ;
INFO  21:43:48,813 - #14 getn
INFO  21:43:48,815 - #35 (
INFO  21:43:48,815 - #19 -
INFO  21:43:48,815 - #14 x
INFO  21:43:48,815 - #36 )
INFO  21:43:48,815 - #34 ;
INFO  21:43:48,815 - #38 }
INFO  21:43:48,815 - #14 read
INFO  21:43:48,815 - #35 (
INFO  21:43:48,815 - #14 x
INFO  21:43:48,815 - #36 )
INFO  21:43:48,815 - #34 ;
INFO  21:43:48,815 - #38 }
INFO  21:43:48,815 - #38 }
INFO  21:43:48,815 - #38 }
