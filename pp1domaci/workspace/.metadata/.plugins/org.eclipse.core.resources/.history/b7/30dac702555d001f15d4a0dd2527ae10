INFO  21:46:43,564 - Compiling source file: C:\Users\anjci\OneDrive\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:46:43,566 - #1 program
INFO  21:46:43,566 - #14 p
INFO  21:46:43,566 - #14 Table
INFO  21:46:43,566 - #14 val
INFO  21:46:43,566 - #34 ;
INFO  21:46:43,566 - #5 int
INFO  21:46:43,566 - #14 rows
INFO  21:46:43,566 - #33 ,
INFO  21:46:43,566 - #14 columns
INFO  21:46:43,566 - #34 ;
INFO  21:46:43,566 - #37 {
INFO  21:46:43,566 - #4 void
INFO  21:46:43,566 - #14 f
INFO  21:46:43,566 - #35 (
INFO  21:46:43,566 - #6 char
INFO  21:46:43,568 - #14 ch
INFO  21:46:43,568 - #33 ,
INFO  21:46:43,568 - #5 int
INFO  21:46:43,568 - #14 a
INFO  21:46:43,568 - #33 ,
INFO  21:46:43,568 - #5 int
INFO  21:46:43,568 - #14 arg
INFO  21:46:43,568 - #36 )
INFO  21:46:43,568 - #5 int
INFO  21:46:43,568 - #14 x
INFO  21:46:43,568 - #34 ;
INFO  21:46:43,568 - #37 {
INFO  21:46:43,568 - #14 x
INFO  21:46:43,568 - #32 =
INFO  21:46:43,568 - #14 arg
INFO  21:46:43,568 - #34 ;
INFO  21:46:43,568 - #38 }
INFO  21:46:43,568 - #4 void
INFO  21:46:43,568 - #14 main
INFO  21:46:43,568 - #35 (
INFO  21:46:43,568 - #36 )
INFO  21:46:43,568 - #5 int
INFO  21:46:43,568 - #14 x
INFO  21:46:43,569 - #33 ,
INFO  21:46:43,569 - #14 i
INFO  21:46:43,569 - #34 ;
INFO  21:46:43,569 - #6 char
INFO  21:46:43,569 - #14 c
INFO  21:46:43,569 - #33 ,
INFO  21:46:43,569 - #5 int
INFO  21:46:43,569 - #14 arr
INFO  21:46:43,569 - #34 ;
INFO  21:46:43,569 - #37 {
INFO  21:46:43,569 - #14 val
INFO  21:46:43,569 - #32 =
INFO  21:46:43,569 - #12 new
INFO  21:46:43,569 - #14 Table
INFO  21:46:43,569 - #35 (
INFO  21:46:43,569 - #36 )
INFO  21:46:43,569 - #34 ;
INFO  21:46:43,569 - #14 val
INFO  21:46:43,569 - #49 .
INFO  21:46:43,569 - #14 setfactor
INFO  21:46:43,569 - #35 (
INFO  21:46:43,569 - #15 2
INFO  21:46:43,569 - #36 )
INFO  21:46:43,569 - #34 ;
INFO  21:46:43,569 - #14 arr
INFO  21:46:43,569 - #32 =
INFO  21:46:43,570 - #12 new
INFO  21:46:43,570 - #5 int
INFO  21:46:43,570 - #15 3
INFO  21:46:43,570 - #34 ;
INFO  21:46:43,570 - #10 for
INFO  21:46:43,570 - #35 (
INFO  21:46:43,570 - #14 i
INFO  21:46:43,570 - #32 =
INFO  21:46:43,570 - #15 0
INFO  21:46:43,570 - #34 ;
INFO  21:46:43,570 - #14 i
INFO  21:46:43,570 - #25 <
INFO  21:46:43,570 - #15 3
INFO  21:46:43,570 - #34 ;
INFO  21:46:43,570 - #14 i
INFO  21:46:43,570 - #47 ++
INFO  21:46:43,570 - #36 )
INFO  21:46:43,570 - #37 {
INFO  21:46:43,570 - #14 arr
INFO  21:46:43,570 - #14 i
INFO  21:46:43,570 - #32 =
INFO  21:46:43,570 - #14 i
INFO  21:46:43,570 - #34 ;
INFO  21:46:43,570 - #38 }
INFO  21:46:43,570 - #10 for
INFO  21:46:43,570 - #35 (
INFO  21:46:43,570 - #14 i
INFO  21:46:43,570 - #32 =
INFO  21:46:43,570 - #15 0
INFO  21:46:43,571 - #34 ;
INFO  21:46:43,571 - #14 i
INFO  21:46:43,571 - #25 <
INFO  21:46:43,571 - #15 3
INFO  21:46:43,571 - #34 ;
INFO  21:46:43,571 - #14 i
INFO  21:46:43,571 - #47 ++
INFO  21:46:43,571 - #36 )
INFO  21:46:43,571 - #2 print
INFO  21:46:43,571 - #35 (
INFO  21:46:43,571 - #14 arr
INFO  21:46:43,571 - #14 i
INFO  21:46:43,571 - #36 )
INFO  21:46:43,571 - #34 ;
INFO  21:46:43,571 - #14 val
INFO  21:46:43,571 - #49 .
INFO  21:46:43,571 - #14 pos
INFO  21:46:43,571 - #32 =
INFO  21:46:43,571 - #12 new
INFO  21:46:43,571 - #5 int
INFO  21:46:43,571 - #14 sizes
INFO  21:46:43,571 - #46 ::
INFO  21:46:43,571 - #14 tableSize
INFO  21:46:43,571 - #34 ;
INFO  21:46:43,571 - #14 val
INFO  21:46:43,572 - #49 .
INFO  21:46:43,572 - #14 neg
INFO  21:46:43,572 - #32 =
INFO  21:46:43,572 - #12 new
INFO  21:46:43,572 - #5 int
INFO  21:46:43,572 - #14 sizes
INFO  21:46:43,572 - #46 ::
INFO  21:46:43,572 - #14 tableSize
INFO  21:46:43,572 - #34 ;
INFO  21:46:43,572 - #14 read
INFO  21:46:43,572 - #35 (
INFO  21:46:43,572 - #14 x
INFO  21:46:43,572 - #36 )
INFO  21:46:43,572 - #34 ;
INFO  21:46:43,572 - #10 for
INFO  21:46:43,572 - #35 (
INFO  21:46:43,574 - #34 ;
INFO  21:46:43,574 - #14 i
INFO  21:46:43,574 - #25 <
INFO  21:46:43,574 - #14 sizes
INFO  21:46:43,574 - #46 ::
INFO  21:46:43,574 - #14 tableSize
INFO  21:46:43,575 - #34 ;
INFO  21:46:43,575 - #14 i
INFO  21:46:43,575 - #47 ++
INFO  21:46:43,575 - #36 )
INFO  21:46:43,575 - #37 {
INFO  21:46:43,575 - #14 val
INFO  21:46:43,575 - #49 .
INFO  21:46:43,575 - #14 putp
INFO  21:46:43,575 - #35 (
INFO  21:46:43,575 - #15 0
INFO  21:46:43,575 - #33 ,
INFO  21:46:43,575 - #14 i
INFO  21:46:43,575 - #36 )
INFO  21:46:43,575 - #34 ;
INFO  21:46:43,575 - #14 val
INFO  21:46:43,575 - #49 .
INFO  21:46:43,575 - #14 putn
INFO  21:46:43,575 - #35 (
INFO  21:46:43,575 - #15 0
INFO  21:46:43,575 - #33 ,
INFO  21:46:43,575 - #14 i
INFO  21:46:43,575 - #36 )
INFO  21:46:43,575 - #34 ;
INFO  21:46:43,575 - #38 }
INFO  21:46:43,575 - #14 f
INFO  21:46:43,575 - #35 (
INFO  21:46:43,575 - #14 c
INFO  21:46:43,575 - #33 ,
INFO  21:46:43,575 - #14 x
INFO  21:46:43,575 - #33 ,
INFO  21:46:43,575 - #14 i
INFO  21:46:43,575 - #36 )
INFO  21:46:43,576 - #34 ;
INFO  21:46:43,576 - #14 read
INFO  21:46:43,576 - #35 (
INFO  21:46:43,576 - #14 rows
INFO  21:46:43,576 - #36 )
INFO  21:46:43,576 - #34 ;
INFO  21:46:43,576 - #14 x
INFO  21:46:43,576 - #32 =
INFO  21:46:43,576 - #14 rows
INFO  21:46:43,576 - #34 ;
INFO  21:46:43,576 - #10 for
INFO  21:46:43,576 - #35 (
INFO  21:46:43,576 - #34 ;
INFO  21:46:43,576 - #34 ;
INFO  21:46:43,576 - #36 )
INFO  21:46:43,576 - #37 {
INFO  21:46:43,576 - #8 if
INFO  21:46:43,576 - #35 (
INFO  21:46:43,576 - #14 x
INFO  21:46:43,576 - #26 <=
INFO  21:46:43,576 - #15 0
INFO  21:46:43,576 - #36 )
INFO  21:46:43,576 - #14 break
INFO  21:46:43,576 - #34 ;
INFO  21:46:43,576 - #8 if
INFO  21:46:43,576 - #35 (
INFO  21:46:43,576 - #15 0
INFO  21:46:43,576 - #26 <=
INFO  21:46:43,576 - #14 x
INFO  21:46:43,576 - #29 &&
INFO  21:46:43,576 - #14 x
INFO  21:46:43,576 - #25 <
INFO  21:46:43,576 - #14 sizes
INFO  21:46:43,576 - #46 ::
INFO  21:46:43,576 - #14 tableSize
INFO  21:46:43,576 - #36 )
INFO  21:46:43,576 - #37 {
INFO  21:46:43,576 - #14 val
INFO  21:46:43,577 - #49 .
INFO  21:46:43,577 - #14 putp
INFO  21:46:43,577 - #35 (
INFO  21:46:43,577 - #14 val
INFO  21:46:43,577 - #49 .
INFO  21:46:43,577 - #14 getp
INFO  21:46:43,577 - #35 (
INFO  21:46:43,577 - #14 x
INFO  21:46:43,577 - #36 )
INFO  21:46:43,577 - #18 +
INFO  21:46:43,577 - #15 1
INFO  21:46:43,577 - #36 )
INFO  21:46:43,577 - #34 ;
INFO  21:46:43,577 - #38 }
INFO  21:46:43,577 - #9 else
INFO  21:46:43,577 - #8 if
INFO  21:46:43,577 - #35 (
INFO  21:46:43,577 - #14 sizes
INFO  21:46:43,577 - #46 ::
INFO  21:46:43,577 - #14 tableSize
INFO  21:46:43,577 - #25 <
INFO  21:46:43,577 - #14 x
INFO  21:46:43,577 - #29 &&
INFO  21:46:43,577 - #14 x
INFO  21:46:43,577 - #25 <
INFO  21:46:43,577 - #15 0
INFO  21:46:43,577 - #36 )
INFO  21:46:43,577 - #37 {
INFO  21:46:43,577 - #14 val
INFO  21:46:43,577 - #49 .
INFO  21:46:43,577 - #14 putn
INFO  21:46:43,577 - #35 (
INFO  21:46:43,577 - #14 val
INFO  21:46:43,577 - #49 .
INFO  21:46:43,577 - #14 getn
INFO  21:46:43,577 - #35 (
INFO  21:46:43,577 - #19 -
INFO  21:46:43,577 - #14 x
INFO  21:46:43,577 - #36 )
INFO  21:46:43,577 - #18 +
INFO  21:46:43,577 - #15 1
INFO  21:46:43,578 - #36 )
INFO  21:46:43,578 - #34 ;
INFO  21:46:43,578 - #38 }
INFO  21:46:43,578 - #14 read
INFO  21:46:43,578 - #35 (
INFO  21:46:43,578 - #14 x
INFO  21:46:43,578 - #36 )
INFO  21:46:43,578 - #34 ;
INFO  21:46:43,578 - #38 }
INFO  21:46:43,578 - #38 }
INFO  21:46:43,578 - #38 }
