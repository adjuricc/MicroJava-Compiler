INFO  21:45:14,454 - Compiling source file: C:\Users\anjci\OneDrive\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:45:14,458 - #1 program
INFO  21:45:14,458 - #14 p
INFO  21:45:14,458 - #14 Table
INFO  21:45:14,459 - #14 val
INFO  21:45:14,459 - #34 ;
INFO  21:45:14,459 - #5 int
INFO  21:45:14,459 - #14 rows
INFO  21:45:14,459 - #33 ,
INFO  21:45:14,459 - #14 columns
INFO  21:45:14,459 - #34 ;
INFO  21:45:14,459 - #37 {
INFO  21:45:14,459 - #4 void
INFO  21:45:14,459 - #14 f
INFO  21:45:14,459 - #35 (
INFO  21:45:14,459 - #6 char
INFO  21:45:14,459 - #14 ch
INFO  21:45:14,459 - #33 ,
INFO  21:45:14,459 - #5 int
INFO  21:45:14,459 - #14 a
INFO  21:45:14,459 - #33 ,
INFO  21:45:14,459 - #5 int
INFO  21:45:14,468 - #14 arg
INFO  21:45:14,468 - #36 )
INFO  21:45:14,468 - #5 int
INFO  21:45:14,468 - #14 x
INFO  21:45:14,468 - #34 ;
INFO  21:45:14,468 - #37 {
INFO  21:45:14,468 - #14 x
INFO  21:45:14,468 - #32 =
INFO  21:45:14,468 - #14 arg
INFO  21:45:14,468 - #34 ;
INFO  21:45:14,468 - #38 }
INFO  21:45:14,468 - #4 void
INFO  21:45:14,468 - #14 main
INFO  21:45:14,468 - #35 (
INFO  21:45:14,468 - #36 )
INFO  21:45:14,468 - #5 int
INFO  21:45:14,468 - #14 x
INFO  21:45:14,468 - #33 ,
INFO  21:45:14,469 - #14 i
INFO  21:45:14,469 - #34 ;
INFO  21:45:14,469 - #6 char
INFO  21:45:14,469 - #14 c
INFO  21:45:14,469 - #33 ,
INFO  21:45:14,469 - #5 int
INFO  21:45:14,469 - #14 arr
INFO  21:45:14,469 - #34 ;
INFO  21:45:14,469 - #37 {
INFO  21:45:14,469 - #14 val
INFO  21:45:14,469 - #32 =
INFO  21:45:14,469 - #12 new
INFO  21:45:14,469 - #14 Table
INFO  21:45:14,469 - #35 (
INFO  21:45:14,469 - #36 )
INFO  21:45:14,469 - #34 ;
INFO  21:45:14,470 - #14 val
INFO  21:45:14,470 - #49 .
INFO  21:45:14,470 - #14 setfactor
INFO  21:45:14,470 - #35 (
INFO  21:45:14,470 - #15 2
INFO  21:45:14,470 - #36 )
INFO  21:45:14,470 - #34 ;
INFO  21:45:14,470 - #14 arr
INFO  21:45:14,470 - #32 =
INFO  21:45:14,470 - #12 new
INFO  21:45:14,470 - #5 int
INFO  21:45:14,470 - #15 3
INFO  21:45:14,470 - #34 ;
INFO  21:45:14,470 - #10 for
INFO  21:45:14,470 - #35 (
INFO  21:45:14,470 - #14 i
INFO  21:45:14,470 - #32 =
INFO  21:45:14,470 - #15 0
INFO  21:45:14,470 - #34 ;
INFO  21:45:14,470 - #14 i
INFO  21:45:14,471 - #25 <
INFO  21:45:14,471 - #15 3
INFO  21:45:14,471 - #34 ;
INFO  21:45:14,471 - #14 i
INFO  21:45:14,471 - #47 ++
INFO  21:45:14,471 - #36 )
INFO  21:45:14,471 - #37 {
INFO  21:45:14,471 - #14 arr
INFO  21:45:14,471 - #14 i
INFO  21:45:14,472 - #32 =
INFO  21:45:14,472 - #14 i
INFO  21:45:14,472 - #34 ;
INFO  21:45:14,472 - #38 }
INFO  21:45:14,472 - #10 for
INFO  21:45:14,472 - #35 (
INFO  21:45:14,472 - #14 i
INFO  21:45:14,472 - #32 =
INFO  21:45:14,472 - #15 0
INFO  21:45:14,472 - #34 ;
INFO  21:45:14,472 - #14 i
INFO  21:45:14,472 - #25 <
INFO  21:45:14,472 - #15 3
INFO  21:45:14,472 - #34 ;
INFO  21:45:14,472 - #14 i
INFO  21:45:14,472 - #47 ++
INFO  21:45:14,472 - #36 )
INFO  21:45:14,472 - #2 print
INFO  21:45:14,472 - #35 (
INFO  21:45:14,472 - #14 arr
INFO  21:45:14,472 - #14 i
INFO  21:45:14,472 - #36 )
INFO  21:45:14,472 - #34 ;
INFO  21:45:14,472 - #14 val
INFO  21:45:14,473 - #49 .
INFO  21:45:14,473 - #14 pos
INFO  21:45:14,473 - #32 =
INFO  21:45:14,473 - #12 new
INFO  21:45:14,473 - #5 int
INFO  21:45:14,473 - #14 sizes
INFO  21:45:14,473 - #46 ::
INFO  21:45:14,473 - #14 tableSize
INFO  21:45:14,473 - #34 ;
INFO  21:45:14,473 - #14 val
INFO  21:45:14,473 - #49 .
INFO  21:45:14,473 - #14 neg
INFO  21:45:14,473 - #32 =
INFO  21:45:14,473 - #12 new
INFO  21:45:14,473 - #5 int
INFO  21:45:14,473 - #14 sizes
INFO  21:45:14,473 - #46 ::
INFO  21:45:14,473 - #14 tableSize
INFO  21:45:14,473 - #34 ;
INFO  21:45:14,474 - #14 read
INFO  21:45:14,474 - #35 (
INFO  21:45:14,474 - #14 x
INFO  21:45:14,474 - #36 )
INFO  21:45:14,474 - #34 ;
INFO  21:45:14,474 - #10 for
INFO  21:45:14,474 - #35 (
INFO  21:45:14,478 - #34 ;
INFO  21:45:14,478 - #14 i
INFO  21:45:14,478 - #25 <
INFO  21:45:14,478 - #14 sizes
INFO  21:45:14,478 - #46 ::
INFO  21:45:14,478 - #14 tableSize
INFO  21:45:14,478 - #34 ;
INFO  21:45:14,478 - #14 i
INFO  21:45:14,478 - #47 ++
INFO  21:45:14,478 - #36 )
INFO  21:45:14,478 - #37 {
INFO  21:45:14,478 - #14 val
INFO  21:45:14,478 - #49 .
INFO  21:45:14,478 - #14 putp
INFO  21:45:14,479 - #35 (
INFO  21:45:14,479 - #15 0
INFO  21:45:14,479 - #33 ,
INFO  21:45:14,479 - #14 i
INFO  21:45:14,479 - #36 )
INFO  21:45:14,479 - #34 ;
INFO  21:45:14,479 - #14 val
INFO  21:45:14,479 - #49 .
INFO  21:45:14,479 - #14 putn
INFO  21:45:14,479 - #35 (
INFO  21:45:14,479 - #15 0
INFO  21:45:14,479 - #33 ,
INFO  21:45:14,479 - #14 i
INFO  21:45:14,479 - #36 )
INFO  21:45:14,479 - #34 ;
INFO  21:45:14,479 - #38 }
INFO  21:45:14,479 - #14 f
INFO  21:45:14,479 - #35 (
INFO  21:45:14,479 - #14 c
INFO  21:45:14,479 - #33 ,
INFO  21:45:14,479 - #14 x
INFO  21:45:14,479 - #33 ,
INFO  21:45:14,479 - #14 i
INFO  21:45:14,479 - #36 )
INFO  21:45:14,479 - #34 ;
INFO  21:45:14,479 - #14 read
INFO  21:45:14,479 - #35 (
INFO  21:45:14,479 - #14 rows
INFO  21:45:14,479 - #36 )
INFO  21:45:14,479 - #34 ;
INFO  21:45:14,479 - #14 x
INFO  21:45:14,480 - #32 =
INFO  21:45:14,480 - #14 rows
INFO  21:45:14,480 - #34 ;
INFO  21:45:14,480 - #10 for
INFO  21:45:14,480 - #35 (
INFO  21:45:14,480 - #34 ;
INFO  21:45:14,480 - #34 ;
INFO  21:45:14,480 - #36 )
INFO  21:45:14,480 - #37 {
INFO  21:45:14,480 - #8 if
INFO  21:45:14,480 - #35 (
INFO  21:45:14,480 - #14 x
INFO  21:45:14,480 - #26 <=
INFO  21:45:14,480 - #15 0
INFO  21:45:14,480 - #36 )
INFO  21:45:14,480 - #14 break
INFO  21:45:14,480 - #34 ;
INFO  21:45:14,480 - #8 if
INFO  21:45:14,480 - #35 (
INFO  21:45:14,480 - #15 0
INFO  21:45:14,480 - #26 <=
INFO  21:45:14,480 - #14 x
INFO  21:45:14,480 - #29 &&
INFO  21:45:14,480 - #14 x
INFO  21:45:14,480 - #25 <
INFO  21:45:14,480 - #14 sizes
INFO  21:45:14,480 - #46 ::
INFO  21:45:14,480 - #14 tableSize
INFO  21:45:14,480 - #36 )
INFO  21:45:14,480 - #37 {
INFO  21:45:14,480 - #14 val
INFO  21:45:14,480 - #49 .
INFO  21:45:14,480 - #14 putp
INFO  21:45:14,480 - #35 (
INFO  21:45:14,480 - #14 val
INFO  21:45:14,480 - #49 .
INFO  21:45:14,480 - #14 getp
INFO  21:45:14,480 - #35 (
INFO  21:45:14,480 - #14 x
INFO  21:45:14,481 - #36 )
INFO  21:45:14,481 - #18 +
INFO  21:45:14,481 - #15 1
INFO  21:45:14,481 - #36 )
INFO  21:45:14,481 - #34 ;
INFO  21:45:14,481 - #38 }
INFO  21:45:14,481 - #9 else
INFO  21:45:14,481 - #8 if
INFO  21:45:14,481 - #35 (
INFO  21:45:14,481 - #14 sizes
INFO  21:45:14,481 - #46 ::
INFO  21:45:14,481 - #14 tableSize
INFO  21:45:14,481 - #25 <
INFO  21:45:14,481 - #14 x
INFO  21:45:14,481 - #29 &&
INFO  21:45:14,481 - #14 x
INFO  21:45:14,482 - #25 <
INFO  21:45:14,482 - #15 0
INFO  21:45:14,482 - #36 )
INFO  21:45:14,482 - #37 {
INFO  21:45:14,482 - #14 val
INFO  21:45:14,482 - #49 .
INFO  21:45:14,482 - #14 putn
INFO  21:45:14,482 - #35 (
INFO  21:45:14,482 - #14 val
INFO  21:45:14,482 - #49 .
INFO  21:45:14,482 - #14 getn
INFO  21:45:14,482 - #35 (
INFO  21:45:14,482 - #14 x
INFO  21:45:14,482 - #36 )
INFO  21:45:14,482 - #18 +
INFO  21:45:14,482 - #15 1
INFO  21:45:14,482 - #36 )
INFO  21:45:14,482 - #34 ;
INFO  21:45:14,482 - #38 }
INFO  21:45:14,482 - #14 read
INFO  21:45:14,482 - #35 (
INFO  21:45:14,482 - #14 x
INFO  21:45:14,482 - #36 )
INFO  21:45:14,482 - #34 ;
INFO  21:45:14,482 - #38 }
INFO  21:45:14,482 - #38 }
INFO  21:45:14,482 - #38 }
